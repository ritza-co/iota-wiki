import { ComponentPropsWithoutRef, ElementType, ReactNode, Ref } from 'react';
export interface CardPropsBase<T> {
    /**
     * Large title above children.
     */
    title?: string;
    /**
     * Icon to the top-left of the title. Can be a ReactNode or a string equal to an image source.
     */
    icon?: ReactNode;
    /**
     * If provided, will render an image to the top of the card.
     */
    image?: string;
    /**
     * Type of element to be rendered.
     */
    as?: T;
    /**
     * If provided, will render as an anchor element.
     */
    href?: string;
    /**
     * Ref of the element to be rendered.
     */
    mRef?: Ref<T | undefined>;
}
/**
 * Props for the `Card` component
 * @typeParam T - Type of the Element rendered by the card.
 */
export type CardProps<T extends ElementType> = CardPropsBase<T> & Omit<ComponentPropsWithoutRef<T>, keyof CardPropsBase<T>>;
export declare function Card<T extends ElementType = 'div'>({ title, icon, image, className, children, as, mRef, ...props }: CardProps<T>): JSX.Element;
